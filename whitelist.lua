local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\242\31","\126\220\49\197"),function(v42) if (v9(v42,2)==81) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=v10(v8(v42,16));if v30 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v13(v101,v30);v30=nil;v111=1;end end else return v101;end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v102-(v102%1) ;else local v103=2^(v44-1) ;return (((v43%(v103 + v103))>=v103) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (732 -476)) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * (126505 -60969)) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (2==v53) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==1) then v56=1;v57=(v31(v55,1,20) * (2^(82 -50))) + v54 ;v53=2;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end end end local function v36(v60) local v61;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1, #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v78=1,v67 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v68[v78]=v80;end v66[934 -(857 + 74) ]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,569 -(367 + 201) ,1)==0) then local v107=v31(v83,2,3);local v108=v31(v83,4,6);local v109={v33(),v33(),nil,nil};if (v107==0) then v109[3]=v33();v109[1 + 3 ]=v33();elseif (v107==1) then v109[3]=v34();elseif (v107==2) then v109[3]=v34() -(2^(893 -(282 + 595))) ;elseif (v107==3) then local v127=0;while true do if (v127==0) then v109[3]=v34() -(2^16) ;v109[4]=v33();break;end end end if (v31(v108,1,1638 -(1523 + 114) )==1) then v109[2 + 0 ]=v68[v109[2 -0 ]];end if (v31(v108,2,2)==1) then v109[3]=v68[v109[3]];end if (v31(v108,3,3)==1) then v109[4]=v68[v109[4]];end v63[v82]=v109;end end for v84=1,v34() do v64[v84-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[1068 -(68 + 997) ];return function(...) local v86=v73;local v87=v74;local v88=v75;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v104=0,v94 do if (v104>=v88) then v92[v104-v88 ]=v93[v104 + 1 ];else v96[v104]=v93[v104 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=45) then if (v99<=(1292 -(226 + 1044))) then if (v99<=10) then if (v99<=4) then if (v99<=1) then if (v99==0) then local v130=0;local v131;while true do if (v130==0) then v131=v98[2];v96[v131](v21(v96,v131 + 1 ,v98[3]));break;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=2) then v96[v98[2]]=v72[v98[3]];elseif (v99==3) then local v231=v98[3];local v232=v96[v231];for v359=v231 + 1 ,v98[4] do v232=v232   .. v96[v359] ;end v96[v98[2]]=v232;else local v234=0;local v235;while true do if (v234==0) then v235=v98[2];v96[v235]=v96[v235](v96[v235 + 1 ]);break;end end end elseif (v99<=7) then if (v99<=5) then local v134=v98[8 -6 ];local v135,v136=v89(v96[v134](v96[v134 + (118 -(32 + 85)) ]));v91=(v136 + v134) -1 ;local v137=0;for v197=v134,v91 do local v198=0;while true do if (v198==0) then v137=v137 + 1 ;v96[v197]=v135[v137];break;end end end elseif (v99>6) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else local v237=0;local v238;local v239;local v240;while true do if (v237==1) then v240=v98[3];for v450=1,v240 do v239[v450]=v96[v238 + v450 ];end break;end if (v237==0) then v238=v98[2 + 0 ];v239=v96[v238];v237=1;end end end elseif (v99<=8) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99>9) then v96[v98[2]]=v71[v98[3]];else local v243=v98[2];v96[v243]=v96[v243](v21(v96,v243 + 1 ,v98[3]));end elseif (v99<=(4 + 12)) then if (v99<=13) then if (v99<=11) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99==12) then v96[v98[2]]=v96[v98[3]][v98[4]];else local v247=0;local v248;local v249;local v250;local v251;while true do if (v247==0) then v248=v98[2];v249,v250=v89(v96[v248](v96[v248 + 1 ]));v247=1;end if (v247==2) then for v453=v248,v91 do v251=v251 + 1 ;v96[v453]=v249[v251];end break;end if (v247==1) then v91=(v250 + v248) -(958 -(892 + 65)) ;v251=0;v247=2;end end end elseif (v99<=14) then v96[v98[2]]=v96[v98[3]];elseif (v99>15) then for v360=v98[2],v98[3] do v96[v360]=nil;end else local v252=v98[2];local v253={};for v362=1, #v95 do local v363=0;local v364;while true do if (0==v363) then v364=v95[v362];for v480=0 -0 , #v364 do local v481=0;local v482;local v483;local v484;while true do if (v481==0) then v482=v364[v480];v483=v482[1];v481=1;end if (v481==1) then v484=v482[2];if ((v483==v96) and (v484>=v252)) then local v510=0;while true do if (v510==0) then v253[v484]=v483[v484];v482[1]=v253;break;end end end break;end end end break;end end end end elseif (v99<=(34 -15)) then if (v99<=17) then local v143=0;local v144;local v145;local v146;while true do if (v143==1) then v146=0;for v393=v144,v98[4] do v146=v146 + 1 ;v96[v393]=v145[v146];end break;end if (v143==0) then v144=v98[3 -1 ];v145={v96[v144](v96[v144 + (351 -(87 + 263)) ])};v143=1;end end elseif (v99==18) then v96[v98[182 -(67 + 113) ]]= #v96[v98[3 + 0 ]];else local v255=0;local v256;local v257;local v258;while true do if (v255==0) then v256=v98[2];v257=v96[v256 + 2 ];v255=1;end if (v255==2) then if (v257>0) then if (v258<=v96[v256 + 1 ]) then v90=v98[3];v96[v256 + 3 ]=v258;end elseif (v258>=v96[v256 + 1 ]) then v90=v98[3];v96[v256 + 3 ]=v258;end break;end if (v255==1) then v258=v96[v256] + v257 ;v96[v256]=v258;v255=2;end end end elseif (v99<=20) then for v199=v98[2],v98[7 -4 ] do v96[v199]=nil;end elseif (v99>(16 + 5)) then local v259=0;local v260;local v261;local v262;local v263;while true do if (v259==2) then for v457=v260,v91 do v263=v263 + 1 ;v96[v457]=v261[v263];end break;end if (0==v259) then v260=v98[2];v261,v262=v89(v96[v260](v21(v96,v260 + 1 ,v91)));v259=1;end if (1==v259) then v91=(v262 + v260) -1 ;v263=0;v259=2;end end else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=(131 -98)) then if (v99<=27) then if (v99<=24) then if (v99==23) then local v147=v96[v98[4]];if  not v147 then v90=v90 + 1 ;else local v265=0;while true do if (v265==0) then v96[v98[2]]=v147;v90=v98[3];break;end end end else v96[v98[954 -(802 + 150) ]]=v96[v98[3]]%v98[4] ;end elseif (v99<=25) then local v149=0;local v150;while true do if (v149==0) then v150=v96[v98[4]];if  not v150 then v90=v90 + 1 ;else v96[v98[2]]=v150;v90=v98[3];end break;end end elseif (v99==26) then local v266=0;local v267;local v268;local v269;while true do if (1==v266) then v269=0;for v460=v267,v98[4] do v269=v269 + 1 ;v96[v460]=v268[v269];end break;end if (v266==0) then v267=v98[2];v268={v96[v267](v96[v267 + 1 ])};v266=1;end end else local v270=0;local v271;local v272;local v273;local v274;while true do if (v270==2) then for v463=v271,v91 do local v464=0;while true do if (0==v464) then v274=v274 + 1 ;v96[v463]=v272[v274];break;end end end break;end if (v270==0) then v271=v98[5 -3 ];v272,v273=v89(v96[v271]());v270=1;end if (1==v270) then v91=(v273 + v271) -1 ;v274=0;v270=2;end end end elseif (v99<=30) then if (v99<=28) then local v151=0;local v152;while true do if (v151==0) then v152=v98[2];v96[v152]=v96[v152](v21(v96,v152 + 1 ,v91));break;end end elseif (v99==29) then local v275=0;local v276;local v277;local v278;local v279;while true do if (0==v275) then v276=v98[2];v277,v278=v89(v96[v276](v21(v96,v276 + 1 ,v98[3])));v275=1;end if (v275==2) then for v465=v276,v91 do local v466=0;while true do if (v466==0) then v279=v279 + 1 ;v96[v465]=v277[v279];break;end end end break;end if (1==v275) then v91=(v278 + v276) -1 ;v279=0;v275=2;end end else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=31) then local v153=v98[2];local v154=v98[4];local v155=v153 + (3 -1) ;local v156={v96[v153](v96[v153 + 1 ],v96[v155])};for v201=1,v154 do v96[v155 + v201 ]=v156[v201];end local v157=v156[1 + 0 ];if v157 then local v282=0;while true do if (v282==0) then v96[v155]=v157;v90=v98[3];break;end end else v90=v90 + 1 ;end elseif (v99==32) then local v283=0;local v284;while true do if (v283==0) then v284=v98[2];v96[v284](v21(v96,v284 + 1 ,v98[3]));break;end end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=39) then if (v99<=36) then if (v99<=34) then local v158=v87[v98[1000 -(915 + 82) ]];local v159;local v160={};v159=v18({},{[v7("\33\44\13\201\192\91\47","\67\126\115\100\167\164\62\87")]=function(v204,v205) local v206=0;local v207;while true do if (v206==0) then v207=v160[v205];return v207[1][v207[5 -3 ]];end end end,[v7("\22\191\88\218\62\137\88\219\44\152","\191\73\224\54")]=function(v208,v209,v210) local v211=0;local v212;while true do if (v211==0) then v212=v160[v209];v212[1][v212[2]]=v210;break;end end end});for v213=1,v98[4] do v90=v90 + 1 ;local v214=v86[v90];if (v214[1]==41) then v160[v213-1 ]={v96,v214[3]};else v160[v213-1 ]={v71,v214[3]};end v95[ #v95 + 1 ]=v160;end v96[v98[2]]=v40(v158,v159,v72);elseif (v99==35) then local v286=v98[2];v96[v286](v96[v286 + 1 ]);else do return v96[v98[2]]();end end elseif (v99<=37) then local v162=0;local v163;while true do if (v162==0) then v163=v98[2];v96[v163](v21(v96,v163 + 1 ,v91));break;end end elseif (v99>38) then local v287=0;local v288;local v289;while true do if (v287==1) then for v467=1, #v95 do local v468=0;local v469;while true do if (v468==0) then v469=v95[v467];for v505=0, #v469 do local v506=0;local v507;local v508;local v509;while true do if (v506==1) then v509=v507[2];if ((v508==v96) and (v509>=v288)) then local v517=0;while true do if (0==v517) then v289[v509]=v508[v509];v507[1]=v289;break;end end end break;end if (v506==0) then v507=v469[v505];v508=v507[1];v506=1;end end end break;end end end break;end if (v287==0) then v288=v98[2 -0 ];v289={};v287=1;end end else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=42) then if (v99<=40) then v96[v98[2]]=v96[v98[1190 -(1069 + 118) ]][v96[v98[4]]];elseif (v99==41) then v96[v98[2]]=v96[v98[6 -3 ]];else local v293=0;local v294;local v295;while true do if (v293==1) then for v470=v294 + 1 ,v91 do v15(v295,v96[v470]);end break;end if (v293==0) then v294=v98[2];v295=v96[v294];v293=1;end end end elseif (v99<=(93 -50)) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>44) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99<=68) then if (v99<=56) then if (v99<=50) then if (v99<=47) then if (v99>46) then if (v96[v98[2]]==v98[1 + 3 ]) then v90=v90 + 1 ;else v90=v98[3];end else local v168=0;local v169;while true do if (v168==0) then v169=v98[2];do return v21(v96,v169,v91);end break;end end end elseif (v99<=48) then v96[v98[2]]=v96[v98[3]][v96[v98[4]]];elseif (v99>49) then if v96[v98[2]] then v90=v90 + (1 -0) ;else v90=v98[3];end else local v298=0;local v299;local v300;local v301;local v302;while true do if (v298==2) then for v471=v299,v91 do local v472=0;while true do if (v472==0) then v302=v302 + 1 ;v96[v471]=v300[v302];break;end end end break;end if (v298==1) then v91=(v301 + v299) -1 ;v302=0;v298=2;end if (v298==0) then v299=v98[2 + 0 ];v300,v301=v89(v96[v299](v21(v96,v299 + (792 -(368 + 423)) ,v98[3])));v298=1;end end end elseif (v99<=(166 -113)) then if (v99<=(69 -(10 + 8))) then local v172=v87[v98[3]];local v173;local v174={};v173=v18({},{[v7("\216\61\243\199\227\7\226","\169\135\98\154")]=function(v216,v217) local v218=0;local v219;while true do if (v218==0) then v219=v174[v217];return v219[1][v219[2]];end end end,[v7("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(v220,v221,v222) local v223=0;local v224;while true do if (0==v223) then v224=v174[v221];v224[1][v224[2]]=v222;break;end end end});for v225=1,v98[15 -11 ] do v90=v90 + 1 ;local v226=v86[v90];if (v226[1]==(483 -(416 + 26))) then v174[v225-1 ]={v96,v226[3]};else v174[v225-1 ]={v71,v226[3]};end v95[ #v95 + 1 ]=v174;end v96[v98[6 -4 ]]=v40(v172,v173,v72);elseif (v99==52) then v96[v98[1 + 1 ]]=v71[v98[3]];else local v305=v98[2];local v306=v96[v305];for v375=v305 + (1 -0) ,v98[3] do v15(v306,v96[v375]);end end elseif (v99<=54) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99>55) then do return;end else v96[v98[2]]=v98[3];end elseif (v99<=(500 -(145 + 293))) then if (v99<=59) then if (v99<=57) then local v178=v98[2];local v179,v180=v89(v96[v178](v21(v96,v178 + (431 -(44 + 386)) ,v91)));v91=(v180 + v178) -1 ;local v181=0;for v228=v178,v91 do local v229=0;while true do if (v229==0) then v181=v181 + 1 ;v96[v228]=v179[v181];break;end end end elseif (v99==(1544 -(998 + 488))) then local v309=v98[2];v96[v309]=v96[v309]();else v96[v98[1 + 1 ]]={};end elseif (v99<=(50 + 10)) then local v182=v98[2];do return v96[v182](v21(v96,v182 + (773 -(201 + 571)) ,v98[3]));end elseif (v99>61) then local v312=v98[3];local v313=v96[v312];for v376=v312 + 1 ,v98[4] do v313=v313   .. v96[v376] ;end v96[v98[2]]=v313;else local v315=v98[2];v96[v315]=v96[v315](v21(v96,v315 + 1 ,v98[3]));end elseif (v99<=65) then if (v99<=63) then local v183=0;local v184;while true do if (v183==0) then v184=v98[2];v96[v184]=v96[v184](v21(v96,v184 + (1139 -(116 + 1022)) ,v91));break;end end elseif (v99==64) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=66) then local v185=v98[8 -6 ];local v186=v96[v185];local v187=v96[v185 + 2 ];if (v187>0) then if (v186>v96[v185 + 1 ]) then v90=v98[3];else v96[v185 + 3 ]=v186;end elseif (v186<v96[v185 + 1 ]) then v90=v98[3];else v96[v185 + 3 ]=v186;end elseif (v99>67) then v96[v98[2]]=v98[3];elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=80) then if (v99<=74) then if (v99<=71) then if (v99<=69) then v96[v98[2]]=v72[v98[3]];elseif (v99>70) then if  not v96[v98[2]] then v90=v90 + 1 + 0 ;else v90=v98[3];end else local v322=0;local v323;while true do if (v322==0) then v323=v98[2];v96[v323]=v96[v323](v96[v323 + 1 ]);break;end end end elseif (v99<=72) then v90=v98[3];elseif (v99==73) then local v324=v98[2];v96[v324](v96[v324 + 1 ]);else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=77) then if (v99<=75) then do return;end elseif (v99>76) then v96[v98[2]]={};else local v327=v98[2];v96[v327](v21(v96,v327 + 1 ,v91));end elseif (v99<=(284 -206)) then local v191=v98[7 -5 ];do return v96[v191](v21(v96,v191 + 1 ,v98[3]));end elseif (v99==(938 -(814 + 45))) then local v328=v98[2];local v329=v96[v328 + 2 ];local v330=v96[v328] + v329 ;v96[v328]=v330;if (v329>0) then if (v330<=v96[v328 + 1 ]) then v90=v98[3];v96[v328 + 3 ]=v330;end elseif (v330>=v96[v328 + 1 ]) then v90=v98[3];v96[v328 + 3 ]=v330;end else local v332=v98[2];local v333=v96[v332];local v334=v98[3];for v379=1,v334 do v333[v379]=v96[v332 + v379 ];end end elseif (v99<=86) then if (v99<=83) then if (v99<=81) then v90=v98[3];elseif (v99==82) then local v335=0;local v336;local v337;local v338;while true do if (v335==0) then v336=v98[2];v337=v96[v336];v335=1;end if (1==v335) then v338=v96[v336 + 2 ];if (v338>0) then if (v337>v96[v336 + 1 ]) then v90=v98[3];else v96[v336 + 3 ]=v337;end elseif (v337<v96[v336 + 1 ]) then v90=v98[3];else v96[v336 + 3 ]=v337;end break;end end else local v339=v98[2];local v340=v98[4];local v341=v339 + 2 ;local v342={v96[v339](v96[v339 + (2 -1) ],v96[v341])};for v382=1,v340 do v96[v341 + v382 ]=v342[v382];end local v343=v342[1];if v343 then local v412=0;while true do if (0==v412) then v96[v341]=v343;v90=v98[3];break;end end else v90=v90 + 1 ;end end elseif (v99<=84) then do return v96[v98[1 + 1 ]]();end elseif (v99==(31 + 54)) then local v344=0;local v345;while true do if (0==v344) then v345=v98[2];v96[v345]=v96[v345]();break;end end else v96[v98[2]]=v96[v98[888 -(261 + 624) ]] + v98[4] ;end elseif (v99<=89) then if (v99<=87) then local v193=0;local v194;local v195;while true do if (v193==0) then v194=v98[3 -1 ];v195=v96[v98[3]];v193=1;end if (v193==1) then v96[v194 + 1 ]=v195;v96[v194]=v195[v98[4]];break;end end elseif (v99>88) then v96[v98[1082 -(1020 + 60) ]]=v98[3]~=0 ;else local v348=0;local v349;local v350;local v351;local v352;while true do if (v348==1) then v91=(v351 + v349) -1 ;v352=1423 -(630 + 793) ;v348=2;end if (v348==2) then for v477=v349,v91 do v352=v352 + 1 ;v96[v477]=v350[v352];end break;end if (v348==0) then v349=v98[2];v350,v351=v89(v96[v349]());v348=1;end end end elseif (v99<=90) then local v196=v98[6 -4 ];do return v21(v96,v196,v91);end elseif (v99==(430 -339)) then local v353=v98[1 + 1 ];local v354=v96[v353];for v390=v353 + 1 ,v91 do v15(v354,v96[v390]);end else local v355=0;local v356;local v357;while true do if (1==v355) then v96[v356 + 1 ]=v357;v96[v356]=v357[v98[4]];break;end if (0==v355) then v356=v98[2];v357=v96[v98[3]];v355=1;end end end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
